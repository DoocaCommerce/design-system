@use '../mixins/tokens' as tokens;
@use './semantic/borders' as *;
@use './semantic/colors' as *;
@use './semantic/motions' as *;
@use './semantic/shadows' as *;
@use './semantic/typographies' as *;
@use './semantic/spacing' as *;
@use './semantic/z-indexes' as *;

:root {
	/**
  * @tokens Font Size
  * @presenter FontSize
  */
	@include tokens.generateVars($semantic-font-size, font-size);
	/**
  * @tokens Font Weight
  * @presenter FontWeight
  */
	@include tokens.generateVars($semantic-font-weight, font-weight);
	/**
  * @tokens Line Height
  * @presenter LineHeight
  */
	@include tokens.generateVars($semantic-line-height, line-height);
	/**
  * @tokens Typograph
  * @presenter LineHeight
  */
	@include tokens.generateVars($semantic-typographies, typography);
	/**
  * @tokens Colors
  * @presenter Color
  */
	@include tokens.generateVars($semantic-color, color);
	/**
  * @tokens Spacings
  * @presenter Spacing
  */
	@include tokens.generateVars($semantic-spacing, spacing);
	/**
  * @tokens Borders
  * @presenter Border
  */
	@include tokens.generateVars($semantic-borders-width, border);
	/**
  * @tokens Borders Radius
  * @presenter BorderRadius
  */
	@include tokens.generateVars($semantic-borders-radius, border);
	/**
  * @tokens Motions
  * @presenter Easing
  */
	@include tokens.generateVars($semantic-motion-ease, motion-ease);
	/**
  * @tokens Motions Duration
  * @presenter Easing
  */
	@include tokens.generateVars($semantic-motion-duration, motion-duration);
	/**
  * @tokens Shadows
  * @presenter Shadow
  */
	@include tokens.generateVars($semantic-shadows, shadow);
	/**
  * @tokens Z-index
  */
    @include tokens.generateVars($semantic-z-indexes, index);

}
